# Generated by Django 3.1 on 2020-08-14 10:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='RecipeContent',
            fields=[
                ('Rec_conId', models.AutoField(primary_key=True, serialize=False)),
                ('Rec_conName', models.CharField(max_length=50, verbose_name='TITLE')),
                ('Rec_conReadcount', models.IntegerField(default=0)),
                ('Rec_conCreate', models.DateTimeField(auto_now_add=True, verbose_name='CREATE_TIME')),
                ('Rec_conModify', models.DateTimeField(verbose_name='MODIFY_DATE')),
                ('Rec_conPickCount', models.IntegerField(default=0)),
                ('Rec_conContent', tinymce.models.HTMLField(verbose_name='CONTENT')),
                ('Rec_conMemID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='OWNER')),
                ('Rec_conTags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='YoutubeContent',
            fields=[
                ('You_conId', models.AutoField(primary_key=True, serialize=False)),
                ('You_conName', models.CharField(max_length=50, verbose_name='TITLE')),
                ('You_conReadcount', models.IntegerField(default=0)),
                ('You_conCreate', models.DateTimeField(auto_now_add=True, verbose_name='CREATE_TIME')),
                ('You_conModify', models.DateTimeField(verbose_name='MODIFY_DATE')),
                ('You_conPickCount', models.IntegerField(default=0)),
                ('You_conContent', models.TextField(default='', verbose_name='YOUTUBE_CONTENT')),
                ('You_conMemID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='OWNER')),
                ('You_conTags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('Rep_id', models.AutoField(primary_key=True, serialize=False)),
                ('Rep_content', models.TextField(verbose_name='CONTENT')),
                ('Rep_date', models.DateTimeField(auto_now_add=True)),
                ('Rep_conid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='content_id', to='recipe.recipecontent')),
                ('Rep_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='content_member', to='recipe.recipecontent')),
            ],
        ),
    ]
